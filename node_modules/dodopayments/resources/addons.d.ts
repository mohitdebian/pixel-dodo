import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as MiscAPI from "./misc.js";
import { DefaultPageNumberPagination, type DefaultPageNumberPaginationParams } from "../pagination.js";
export declare class Addons extends APIResource {
    create(body: AddonCreateParams, options?: Core.RequestOptions): Core.APIPromise<AddonResponse>;
    retrieve(id: string, options?: Core.RequestOptions): Core.APIPromise<AddonResponse>;
    update(id: string, body: AddonUpdateParams, options?: Core.RequestOptions): Core.APIPromise<AddonResponse>;
    list(query?: AddonListParams, options?: Core.RequestOptions): Core.PagePromise<AddonResponsesDefaultPageNumberPagination, AddonResponse>;
    list(options?: Core.RequestOptions): Core.PagePromise<AddonResponsesDefaultPageNumberPagination, AddonResponse>;
    updateImages(id: string, options?: Core.RequestOptions): Core.APIPromise<AddonUpdateImagesResponse>;
}
export declare class AddonResponsesDefaultPageNumberPagination extends DefaultPageNumberPagination<AddonResponse> {
}
export interface AddonResponse {
    /**
     * id of the Addon
     */
    id: string;
    /**
     * Unique identifier for the business to which the addon belongs.
     */
    business_id: string;
    /**
     * Created time
     */
    created_at: string;
    currency: MiscAPI.Currency;
    /**
     * Name of the Addon
     */
    name: string;
    /**
     * Amount of the addon
     */
    price: number;
    /**
     * Represents the different categories of taxation applicable to various products
     * and services.
     */
    tax_category: MiscAPI.TaxCategory;
    /**
     * Updated time
     */
    updated_at: string;
    /**
     * Optional description of the Addon
     */
    description?: string | null;
    /**
     * Image of the Addon
     */
    image?: string | null;
}
export interface AddonUpdateImagesResponse {
    image_id: string;
    url: string;
}
export interface AddonCreateParams {
    currency: MiscAPI.Currency;
    /**
     * Name of the Addon
     */
    name: string;
    /**
     * Amount of the addon
     */
    price: number;
    /**
     * Represents the different categories of taxation applicable to various products
     * and services.
     */
    tax_category: MiscAPI.TaxCategory;
    /**
     * Optional description of the Addon
     */
    description?: string | null;
}
export interface AddonUpdateParams {
    currency?: MiscAPI.Currency | null;
    /**
     * Description of the Addon, optional and must be at most 1000 characters.
     */
    description?: string | null;
    /**
     * Addon image id after its uploaded to S3
     */
    image_id?: string | null;
    /**
     * Name of the Addon, optional and must be at most 100 characters.
     */
    name?: string | null;
    /**
     * Amount of the addon
     */
    price?: number | null;
    /**
     * Represents the different categories of taxation applicable to various products
     * and services.
     */
    tax_category?: MiscAPI.TaxCategory | null;
}
export interface AddonListParams extends DefaultPageNumberPaginationParams {
}
export declare namespace Addons {
    export { type AddonResponse as AddonResponse, type AddonUpdateImagesResponse as AddonUpdateImagesResponse, AddonResponsesDefaultPageNumberPagination as AddonResponsesDefaultPageNumberPagination, type AddonCreateParams as AddonCreateParams, type AddonUpdateParams as AddonUpdateParams, type AddonListParams as AddonListParams, };
}
//# sourceMappingURL=addons.d.ts.map